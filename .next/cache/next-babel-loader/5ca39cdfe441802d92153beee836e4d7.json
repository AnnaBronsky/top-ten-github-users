{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ann/Development/Projects/Work/agile-nix-test/front/components/Users.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt, faEnvelope, faStar, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addSum, addData } from '../redux/actions/index';\n\nconst sumStateToProps = state => {\n  return {\n    sum: state.sum\n  };\n};\n\nconst dataStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nfunction sumDispatchToProps(dispatch) {\n  return {\n    addSum: sum => dispatch(addSum(sum))\n  };\n}\n\nfunction dataDispatchToProps(dispatch) {\n  return {\n    addData: data => dispatch(addData(data))\n  };\n}\n\nconst axiosGitHubGraphQL = axios.create({\n  baseURL: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: 'bearer 2cdc2aa829e6a0fe455edaf962cdda54e923b505'\n  }\n});\nconst GET_RATE = `\n{\n    search(   \n      type: USER, query:\"location:Kharkiv sort:followers-desc\"\n      first: 10) {\n      nodes {\n        ... on User {\n          name\n          login\n          avatarUrl\n          url\n          bio\n          location\n          email\n          repositories{totalCount}\n          topRepositories(first: 100, orderBy:{field: STARGAZERS, direction: DESC}) {\n            edges {\n              node {\n                stargazers{totalCount}\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst Divider = styled.hr`\n    background: rgba(128, 128, 128, 0.5);\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    height: 1px;\n    border: 0;\n`;\nconst Avatar = styled.img`\n    width: 75px;\n    margin-top: 10px;\n    border-radius: 10px;\n    margin-bottom: 10px;\n`;\nconst Info = styled.div`\n    display: flex;\n    width: 88%;\n    flex-flow: column;\n    margin-top: 10px;\n`;\nconst Login = styled.div`\n    width: 88%;\n    display: flex;\n`;\nconst Status = styled.div`\n    margin-top: 10px;\n    padding-left: 10px;\n`;\nconst Link = styled.a`\n    text-decoration: blink;\n    padding-left: 10px;\n    color: #2664d9;\n`;\nconst Name = styled.p`\n    padding-left: 10px;\n    margin: 0;\n`;\nconst Icons = styled.div`\n    display: flex;\n    margin-top: 10px;\n    color: #858585;\n`;\nconst LocationIcon = styled.div`\n    padding-left: 10px;\n`;\nconst MailIcon = styled.div`\n    padding-left: 40px;\n`;\nconst StarIcon = styled.div`\n    padding-left: 40px;\n`;\nconst Stars = styled.div`\n    padding-left: 10px;\n`;\nconst Location = styled.div`\n    padding-left: 10px;\n`;\nconst MailAdress = styled.div`\n    padding-left: 10px;\n`;\nconst Block = styled.div`\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n`;\nconst Loading = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100vh;\n    justify-content: center;\n`;\n\nclass ConnectedUsers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"GET_SUM_FIRST_HUNDRED\", login => `query \n{\n  search(   \n    type: USER, query:\"user:${login}\"\n    first: 1) {\n    nodes {\n      ... on User {\n        login\n        repositories (first:100) {\n      pageInfo {\n        hasNextPage,\n        endCursor\n      },\n      nodes {\n        stargazers{totalCount}\n      }\n      }\n    }\n  }\n}\n}`);\n\n    _defineProperty(this, \"GET_SUM_HUNDRED\", (login, after) => `query \n{\n  search(   \n    type: USER, query:\"user:${login}\"\n    first: 1) {\n    nodes {\n      ... on User {\n        login\n        repositories (first:100, after:\"${after}\") {\n      pageInfo {\n        hasNextPage,\n        endCursor\n      },\n      nodes {\n        stargazers{totalCount}\n      }\n      }\n    }\n  }\n}\n}`);\n\n    _defineProperty(this, \"onFetchSumHundredFromGitHub\", (user, number, endCursor) => {\n      const that = this;\n      const after = endCursor.toString();\n      const login = user;\n      const key = number;\n      axiosGitHubGraphQL.post('', {\n        query: that.GET_SUM_HUNDRED(login, after)\n      }).then(result => {\n        let array = result.data.data.search.nodes[0].repositories;\n        that.getSumHundred(array, key);\n      });\n    });\n\n    _defineProperty(this, \"onFetchSumForFirstHundredFromGitHub\", (user, number) => {\n      const that = this;\n      const login = user;\n      const key = number;\n      axiosGitHubGraphQL.post('', {\n        query: that.GET_SUM_FIRST_HUNDRED(login)\n      }).then(result => {\n        let array = result.data.data.search.nodes[0].repositories;\n        that.getSumFirstHundred(array, key, login);\n      });\n    });\n\n    _defineProperty(this, \"onFetchFromGitHub\", () => {\n      const that = this; // const { data } = this.props;\n\n      axiosGitHubGraphQL.post('', {\n        query: GET_RATE\n      }).then(result => {\n        let array = result.data.data.search.nodes;\n\n        for (var i = 0; i < 10; i++) {\n          // data.push({\n          //     avatarUrl: array[i].avatarUrl,\n          //     bio: array[i].bio,\n          //     email: array[i].email,\n          //     location: array[i].location,\n          //     login: array[i].login,\n          //     name: array[i].name,\n          //     url: array[i].url\n          // });\n          // this.props.addData({ data: data });\n          this.props.addData({\n            data: [array[i].avatarUrl, array[i].bio, array[i].email, array[i].location, array[i].login, array[i].name, array[i].url]\n          }); // that.setState({ data: data });\n\n          if (array[i].repositories.totalCount > 100) {\n            that.onFetchSumForFirstHundredFromGitHub(array[i].login, i);\n          } else {\n            that.getSum(array[i].topRepositories.edges, i);\n          }\n        }\n      }).catch(function (error) {\n        alert(error);\n      });\n    });\n\n    this.state = {// externalData: null\n      // sum: {},\n      // data: []\n    };\n    this.getSum = this.getSum.bind(this);\n  } // componentWillMount() {\n  //     this._asyncRequest = this.onFetchFromGitHub().then(externalData => {\n  //         this._asyncRequest = null;\n  //         this.setState({ externalData });\n  //     });\n  // }\n\n\n  componentDidMount() {\n    this.onFetchFromGitHub();\n  }\n\n  getSumHundred(array, number, name) {\n    let key = number;\n    let summ = 0;\n    const login = name;\n    const {\n      sum\n    } = this.props;\n    array.nodes.forEach(element => {\n      summ += element.stargazers.totalCount;\n    });\n    console.log(sum[key]); // this.props.addSum({\n    //     sum: [sum, key]\n    // });\n    // this.props.addSum({\n    //     sum: Object.assign(sum, {\n    //         [key]: summ + sum[key]\n    //     })\n    // });\n    // this.setState({\n    //     sum: Object.assign(this.state.sum, {\n    //         [key]: sum + this.state.sum[key]\n    //     })\n    // });\n  }\n\n  getSumFirstHundred(array, number, name) {\n    let key = number;\n    let sum = 0; // const { sum } = this.props;\n\n    const login = name;\n    array.nodes.forEach(element => {\n      sum += element.stargazers.totalCount;\n    }); // this.props.addSum({\n    //     sum: Object.assign(sum, {\n    //         [key]: summ\n    //     })\n    // });\n\n    this.props.addSum({\n      sum: [sum, key]\n    }); // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n\n    if (array.pageInfo.hasNextPage === true) {\n      this.onFetchSumHundredFromGitHub(login, key, array.pageInfo.endCursor);\n    }\n  }\n\n  getSum(array, number) {\n    let key = number;\n    let sum = 0; // const { sum } = this.props;\n\n    if (array !== undefined) {\n      array.forEach(element => {\n        sum += element.node.stargazers.totalCount;\n      });\n    }\n\n    this.props.addSum({\n      sum: [sum, key]\n    }); // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n  }\n\n  render() {\n    // if (this.state.externalData === null) {\n    //     // Render loading state ...\n    //     console.log(0);\n    // } else {\n    const {\n      data,\n      sum\n    } = this.props; // console.log(sum);\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"he\") // <>\n    //     {\n    //         // data.length === 0\n    //         // false ? (\n    //         //     <Loading>\n    //         //         <FontAwesomeIcon\n    //         //             icon={faSpinner}\n    //         //             size=\"4x\"\n    //         //             spin\n    //         //             pulse\n    //         //         />\n    //         //     </Loading>\n    //         // ) : (\n    //         <>\n    //             <Divider />\n    //             {data.map(user => (\n    //                 <>\n    //                     <Block>\n    //                         <Avatar src={user.avatarUrl}></Avatar>\n    //                         <Info>\n    //                             <Login>\n    //                                 <Link\n    //                                     href={user.url}\n    //                                     target=\"_blank\"\n    //                                 >\n    //                                     {user.login}\n    //                                 </Link>\n    //                                 <Name>{user.name}</Name>\n    //                             </Login>\n    //                             <Status>{user.bio}</Status>\n    //                             <Icons>\n    //                                 <LocationIcon>\n    //                                     <FontAwesomeIcon\n    //                                         size=\"xs\"\n    //                                         icon={faMapMarkerAlt}\n    //                                     ></FontAwesomeIcon>\n    //                                 </LocationIcon>\n    //                                 <Location>{user.location}</Location>\n    //                                 {user.email !== '' ? (\n    //                                     <>\n    //                                         <MailIcon>\n    //                                             <FontAwesomeIcon\n    //                                                 icon={faEnvelope}\n    //                                                 size=\"xs\"\n    //                                             ></FontAwesomeIcon>\n    //                                         </MailIcon>\n    //                                         <MailAdress>\n    //                                             {user.email}\n    //                                         </MailAdress>\n    //                                     </>\n    //                                 ) : null}\n    //                                 <StarIcon>\n    //                                     <FontAwesomeIcon\n    //                                         icon={faStar}\n    //                                         size=\"xs\"\n    //                                     ></FontAwesomeIcon>\n    //                                 </StarIcon>\n    //                                 <Stars>\n    //                                     {this.props.sum[\n    //                                         data.indexOf(user)\n    //                                     ] === undefined\n    //                                         ? ' '\n    //                                         : Number(\n    //                                               this.props.sum[\n    //                                                   data.indexOf(user)\n    //                                               ]\n    //                                           ).toLocaleString()}\n    //                                 </Stars>\n    //                             </Icons>\n    //                         </Info>\n    //                     </Block>\n    //                     <Divider />\n    //                 </>\n    //             ))}\n    //         </>\n    //         // )\n    //     }\n    // </>\n    ; // Render real UI ...\n    // }\n  }\n\n}\n\nconst UsersWithSumState = connect(sumStateToProps, null)(ConnectedUsers);\nconst UsersWithDataState = connect(dataStateToProps, null)(UsersWithSumState);\nconst UsersWithSumDispatched = connect(null, sumDispatchToProps)(UsersWithDataState);\nconst Users = connect(null, dataDispatchToProps)(UsersWithSumDispatched);\nexport default Users;","map":{"version":3,"sources":["/home/ann/Development/Projects/Work/agile-nix-test/front/components/Users.js"],"names":["React","FontAwesomeIcon","faMapMarkerAlt","faEnvelope","faStar","faSpinner","styled","css","axios","connect","addSum","addData","sumStateToProps","state","sum","dataStateToProps","data","sumDispatchToProps","dispatch","dataDispatchToProps","axiosGitHubGraphQL","create","baseURL","headers","Authorization","GET_RATE","Divider","hr","Avatar","img","Info","div","Login","Status","Link","a","Name","p","Icons","LocationIcon","MailIcon","StarIcon","Stars","Location","MailAdress","Block","Loading","ConnectedUsers","Component","constructor","props","login","after","user","number","endCursor","that","toString","key","post","query","GET_SUM_HUNDRED","then","result","array","search","nodes","repositories","getSumHundred","GET_SUM_FIRST_HUNDRED","getSumFirstHundred","i","avatarUrl","bio","email","location","name","url","totalCount","onFetchSumForFirstHundredFromGitHub","getSum","topRepositories","edges","catch","error","alert","bind","componentDidMount","onFetchFromGitHub","summ","forEach","element","stargazers","console","log","pageInfo","hasNextPage","onFetchSumHundredFromGitHub","undefined","node","render","UsersWithSumState","UsersWithDataState","UsersWithSumDispatched","Users"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faMapMarkerAlt,\n    faEnvelope,\n    faStar,\n    faSpinner\n} from '@fortawesome/free-solid-svg-icons';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addSum, addData } from '../redux/actions/index';\n\nconst sumStateToProps = state => {\n    return { sum: state.sum };\n};\n\nconst dataStateToProps = state => {\n    return { data: state.data };\n};\n\nfunction sumDispatchToProps(dispatch) {\n    return {\n        addSum: sum => dispatch(addSum(sum))\n    };\n}\n\nfunction dataDispatchToProps(dispatch) {\n    return {\n        addData: data => dispatch(addData(data))\n    };\n}\n\nconst axiosGitHubGraphQL = axios.create({\n    baseURL: 'https://api.github.com/graphql',\n    headers: {\n        Authorization: 'bearer 2cdc2aa829e6a0fe455edaf962cdda54e923b505'\n    }\n});\n\nconst GET_RATE = `\n{\n    search(   \n      type: USER, query:\"location:Kharkiv sort:followers-desc\"\n      first: 10) {\n      nodes {\n        ... on User {\n          name\n          login\n          avatarUrl\n          url\n          bio\n          location\n          email\n          repositories{totalCount}\n          topRepositories(first: 100, orderBy:{field: STARGAZERS, direction: DESC}) {\n            edges {\n              node {\n                stargazers{totalCount}\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst Divider = styled.hr`\n    background: rgba(128, 128, 128, 0.5);\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    height: 1px;\n    border: 0;\n`;\nconst Avatar = styled.img`\n    width: 75px;\n    margin-top: 10px;\n    border-radius: 10px;\n    margin-bottom: 10px;\n`;\n\nconst Info = styled.div`\n    display: flex;\n    width: 88%;\n    flex-flow: column;\n    margin-top: 10px;\n`;\n\nconst Login = styled.div`\n    width: 88%;\n    display: flex;\n`;\n\nconst Status = styled.div`\n    margin-top: 10px;\n    padding-left: 10px;\n`;\n\nconst Link = styled.a`\n    text-decoration: blink;\n    padding-left: 10px;\n    color: #2664d9;\n`;\n\nconst Name = styled.p`\n    padding-left: 10px;\n    margin: 0;\n`;\n\nconst Icons = styled.div`\n    display: flex;\n    margin-top: 10px;\n    color: #858585;\n`;\n\nconst LocationIcon = styled.div`\n    padding-left: 10px;\n`;\n\nconst MailIcon = styled.div`\n    padding-left: 40px;\n`;\n\nconst StarIcon = styled.div`\n    padding-left: 40px;\n`;\n\nconst Stars = styled.div`\n    padding-left: 10px;\n`;\n\nconst Location = styled.div`\n    padding-left: 10px;\n`;\n\nconst MailAdress = styled.div`\n    padding-left: 10px;\n`;\n\nconst Block = styled.div`\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n`;\n\nconst Loading = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100vh;\n    justify-content: center;\n`;\n\nclass ConnectedUsers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // externalData: null\n            // sum: {},\n            // data: []\n        };\n        this.getSum = this.getSum.bind(this);\n    }\n\n    // componentWillMount() {\n    //     this._asyncRequest = this.onFetchFromGitHub().then(externalData => {\n    //         this._asyncRequest = null;\n    //         this.setState({ externalData });\n    //     });\n    // }\n\n    componentDidMount() {\n        this.onFetchFromGitHub();\n    }\n\n    GET_SUM_FIRST_HUNDRED = login => `query \n{\n  search(   \n    type: USER, query:\"user:${login}\"\n    first: 1) {\n    nodes {\n      ... on User {\n        login\n        repositories (first:100) {\n      pageInfo {\n        hasNextPage,\n        endCursor\n      },\n      nodes {\n        stargazers{totalCount}\n      }\n      }\n    }\n  }\n}\n}`;\n\n    GET_SUM_HUNDRED = (login, after) =>\n        `query \n{\n  search(   \n    type: USER, query:\"user:${login}\"\n    first: 1) {\n    nodes {\n      ... on User {\n        login\n        repositories (first:100, after:\"${after}\") {\n      pageInfo {\n        hasNextPage,\n        endCursor\n      },\n      nodes {\n        stargazers{totalCount}\n      }\n      }\n    }\n  }\n}\n}`;\n\n    onFetchSumHundredFromGitHub = (user, number, endCursor) => {\n        const that = this;\n        const after = endCursor.toString();\n        const login = user;\n        const key = number;\n        axiosGitHubGraphQL\n            .post('', { query: that.GET_SUM_HUNDRED(login, after) })\n            .then(result => {\n                let array = result.data.data.search.nodes[0].repositories;\n                that.getSumHundred(array, key);\n            });\n    };\n\n    onFetchSumForFirstHundredFromGitHub = (user, number) => {\n        const that = this;\n        const login = user;\n        const key = number;\n        axiosGitHubGraphQL\n            .post('', { query: that.GET_SUM_FIRST_HUNDRED(login) })\n            .then(result => {\n                let array = result.data.data.search.nodes[0].repositories;\n                that.getSumFirstHundred(array, key, login);\n            });\n    };\n\n    onFetchFromGitHub = () => {\n        const that = this;\n        // const { data } = this.props;\n        axiosGitHubGraphQL\n            .post('', { query: GET_RATE })\n            .then(result => {\n                let array = result.data.data.search.nodes;\n                for (var i = 0; i < 10; i++) {\n                    // data.push({\n                    //     avatarUrl: array[i].avatarUrl,\n                    //     bio: array[i].bio,\n                    //     email: array[i].email,\n                    //     location: array[i].location,\n                    //     login: array[i].login,\n                    //     name: array[i].name,\n                    //     url: array[i].url\n                    // });\n                    // this.props.addData({ data: data });\n                    this.props.addData({\n                        data: [\n                            array[i].avatarUrl,\n                            array[i].bio,\n                            array[i].email,\n                            array[i].location,\n                            array[i].login,\n                            array[i].name,\n                            array[i].url\n                        ]\n                    });\n\n                    // that.setState({ data: data });\n                    if (array[i].repositories.totalCount > 100) {\n                        that.onFetchSumForFirstHundredFromGitHub(\n                            array[i].login,\n                            i\n                        );\n                    } else {\n                        that.getSum(array[i].topRepositories.edges, i);\n                    }\n                }\n            })\n            .catch(function(error) {\n                alert(error);\n            });\n    };\n\n    getSumHundred(array, number, name) {\n        let key = number;\n        let summ = 0;\n        const login = name;\n        const { sum } = this.props;\n        array.nodes.forEach(element => {\n            summ += element.stargazers.totalCount;\n        });\n        console.log(sum[key]);\n\n        // this.props.addSum({\n        //     sum: [sum, key]\n        // });\n\n        // this.props.addSum({\n        //     sum: Object.assign(sum, {\n        //         [key]: summ + sum[key]\n        //     })\n        // });\n        // this.setState({\n        //     sum: Object.assign(this.state.sum, {\n        //         [key]: sum + this.state.sum[key]\n        //     })\n        // });\n    }\n\n    getSumFirstHundred(array, number, name) {\n        let key = number;\n        let sum = 0;\n        // const { sum } = this.props;\n        const login = name;\n        array.nodes.forEach(element => {\n            sum += element.stargazers.totalCount;\n        });\n        // this.props.addSum({\n        //     sum: Object.assign(sum, {\n        //         [key]: summ\n        //     })\n        // });\n        this.props.addSum({\n            sum: [sum, key]\n        });\n        // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n        if (array.pageInfo.hasNextPage === true) {\n            this.onFetchSumHundredFromGitHub(\n                login,\n                key,\n                array.pageInfo.endCursor\n            );\n        }\n    }\n\n    getSum(array, number) {\n        let key = number;\n        let sum = 0;\n        // const { sum } = this.props;\n\n        if (array !== undefined) {\n            array.forEach(element => {\n                sum += element.node.stargazers.totalCount;\n            });\n        }\n        this.props.addSum({\n            sum: [sum, key]\n        });\n        // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n    }\n\n    render() {\n        // if (this.state.externalData === null) {\n        //     // Render loading state ...\n        //     console.log(0);\n        // } else {\n        const { data, sum } = this.props;\n        // console.log(sum);\n        return (\n            <div>he</div>\n            // <>\n            //     {\n            //         // data.length === 0\n            //         // false ? (\n            //         //     <Loading>\n            //         //         <FontAwesomeIcon\n            //         //             icon={faSpinner}\n            //         //             size=\"4x\"\n            //         //             spin\n            //         //             pulse\n            //         //         />\n            //         //     </Loading>\n            //         // ) : (\n            //         <>\n            //             <Divider />\n\n            //             {data.map(user => (\n            //                 <>\n            //                     <Block>\n            //                         <Avatar src={user.avatarUrl}></Avatar>\n            //                         <Info>\n            //                             <Login>\n            //                                 <Link\n            //                                     href={user.url}\n            //                                     target=\"_blank\"\n            //                                 >\n            //                                     {user.login}\n            //                                 </Link>\n            //                                 <Name>{user.name}</Name>\n            //                             </Login>\n            //                             <Status>{user.bio}</Status>\n            //                             <Icons>\n            //                                 <LocationIcon>\n            //                                     <FontAwesomeIcon\n            //                                         size=\"xs\"\n            //                                         icon={faMapMarkerAlt}\n            //                                     ></FontAwesomeIcon>\n            //                                 </LocationIcon>\n            //                                 <Location>{user.location}</Location>\n            //                                 {user.email !== '' ? (\n            //                                     <>\n            //                                         <MailIcon>\n            //                                             <FontAwesomeIcon\n            //                                                 icon={faEnvelope}\n            //                                                 size=\"xs\"\n            //                                             ></FontAwesomeIcon>\n            //                                         </MailIcon>\n            //                                         <MailAdress>\n            //                                             {user.email}\n            //                                         </MailAdress>\n            //                                     </>\n            //                                 ) : null}\n            //                                 <StarIcon>\n            //                                     <FontAwesomeIcon\n            //                                         icon={faStar}\n            //                                         size=\"xs\"\n            //                                     ></FontAwesomeIcon>\n            //                                 </StarIcon>\n            //                                 <Stars>\n            //                                     {this.props.sum[\n            //                                         data.indexOf(user)\n            //                                     ] === undefined\n            //                                         ? ' '\n            //                                         : Number(\n            //                                               this.props.sum[\n            //                                                   data.indexOf(user)\n            //                                               ]\n            //                                           ).toLocaleString()}\n            //                                 </Stars>\n            //                             </Icons>\n            //                         </Info>\n            //                     </Block>\n            //                     <Divider />\n            //                 </>\n            //             ))}\n            //         </>\n            //         // )\n            //     }\n            // </>\n        );\n        // Render real UI ...\n        // }\n    }\n}\n\nconst UsersWithSumState = connect(\n    sumStateToProps,\n    null\n)(ConnectedUsers);\n\nconst UsersWithDataState = connect(\n    dataStateToProps,\n    null\n)(UsersWithSumState);\n\nconst UsersWithSumDispatched = connect(\n    null,\n    sumDispatchToProps\n)(UsersWithDataState);\n\nconst Users = connect(\n    null,\n    dataDispatchToProps\n)(UsersWithSumDispatched);\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}