{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ann/Development/Projects/Work/agile-nix-test/front/components/Users.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    height: 100vh;\\n    justify-content: center;\\n\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 700px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    display: flex;\\n\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-left: 10px;\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-left: 10px;\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-left: 10px;\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-left: 40px;\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-left: 40px;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-left: 10px;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    margin-top: 10px;\\n    color: #858585;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    padding-left: 10px;\\n    margin: 0;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    text-decoration: blink;\\n    padding-left: 10px;\\n    color: #2664d9;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top: 10px;\\n    padding-left: 10px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 88%;\\n    display: flex;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    width: 88%;\\n    flex-flow: column;\\n    margin-top: 10px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 75px;\\n    margin-top: 10px;\\n    border-radius: 10px;\\n    margin-bottom: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background: rgba(128, 128, 128, 0.5);\\n    width: 700px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    height: 1px;\\n    border: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt, faEnvelope, faStar, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addSum as _addSum, addData as _addData } from '../redux/actions/index';\n\nvar sumStateToProps = function sumStateToProps(state) {\n  return {\n    sum: state.sum\n  };\n};\n\nvar dataStateToProps = function dataStateToProps(state) {\n  return {\n    data: state.data\n  };\n};\n\nfunction sumDispatchToProps(dispatch) {\n  return {\n    addSum: function addSum(sum) {\n      return dispatch(_addSum(sum));\n    }\n  };\n}\n\nfunction dataDispatchToProps(dispatch) {\n  return {\n    addData: function addData(data) {\n      return dispatch(_addData(data));\n    }\n  };\n}\n\nvar axiosGitHubGraphQL = axios.create({\n  baseURL: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: 'bearer 2cdc2aa829e6a0fe455edaf962cdda54e923b505'\n  }\n});\nvar GET_RATE = \"\\n{\\n    search(   \\n      type: USER, query:\\\"location:Kharkiv sort:followers-desc\\\"\\n      first: 10) {\\n      nodes {\\n        ... on User {\\n          name\\n          login\\n          avatarUrl\\n          url\\n          bio\\n          location\\n          email\\n          repositories{totalCount}\\n          topRepositories(first: 100, orderBy:{field: STARGAZERS, direction: DESC}) {\\n            edges {\\n              node {\\n                stargazers{totalCount}\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\";\nvar Divider = styled.hr(_templateObject());\nvar Avatar = styled.img(_templateObject2());\nvar Info = styled.div(_templateObject3());\nvar Login = styled.div(_templateObject4());\nvar Status = styled.div(_templateObject5());\nvar Link = styled.a(_templateObject6());\nvar Name = styled.p(_templateObject7());\nvar Icons = styled.div(_templateObject8());\nvar LocationIcon = styled.div(_templateObject9());\nvar MailIcon = styled.div(_templateObject10());\nvar StarIcon = styled.div(_templateObject11());\nvar Stars = styled.div(_templateObject12());\nvar Location = styled.div(_templateObject13());\nvar MailAdress = styled.div(_templateObject14());\nvar Block = styled.div(_templateObject15());\nvar Loading = styled.div(_templateObject16());\n\nvar ConnectedUsers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConnectedUsers, _React$Component);\n\n  function ConnectedUsers(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectedUsers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedUsers).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"GET_SUM_FIRST_HUNDRED\", function (login) {\n      return \"query \\n{\\n  search(   \\n    type: USER, query:\\\"user:\".concat(login, \"\\\"\\n    first: 1) {\\n    nodes {\\n      ... on User {\\n        login\\n        repositories (first:100) {\\n      pageInfo {\\n        hasNextPage,\\n        endCursor\\n      },\\n      nodes {\\n        stargazers{totalCount}\\n      }\\n      }\\n    }\\n  }\\n}\\n}\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"GET_SUM_HUNDRED\", function (login, after) {\n      return \"query \\n{\\n  search(   \\n    type: USER, query:\\\"user:\".concat(login, \"\\\"\\n    first: 1) {\\n    nodes {\\n      ... on User {\\n        login\\n        repositories (first:100, after:\\\"\").concat(after, \"\\\") {\\n      pageInfo {\\n        hasNextPage,\\n        endCursor\\n      },\\n      nodes {\\n        stargazers{totalCount}\\n      }\\n      }\\n    }\\n  }\\n}\\n}\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFetchSumHundredFromGitHub\", function (user, number, endCursor) {\n      var that = _assertThisInitialized(_this);\n\n      var after = endCursor.toString();\n      var login = user;\n      var key = number;\n      axiosGitHubGraphQL.post('', {\n        query: that.GET_SUM_HUNDRED(login, after)\n      }).then(function (result) {\n        var array = result.data.data.search.nodes[0].repositories;\n        that.getSumHundred(array, key);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFetchSumForFirstHundredFromGitHub\", function (user, number) {\n      var that = _assertThisInitialized(_this);\n\n      var login = user;\n      var key = number;\n      axiosGitHubGraphQL.post('', {\n        query: that.GET_SUM_FIRST_HUNDRED(login)\n      }).then(function (result) {\n        var array = result.data.data.search.nodes[0].repositories;\n        that.getSumFirstHundred(array, key, login);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFetchFromGitHub\", function () {\n      var that = _assertThisInitialized(_this); // const { data } = this.props;\n\n\n      axiosGitHubGraphQL.post('', {\n        query: GET_RATE\n      }).then(function (result) {\n        var array = result.data.data.search.nodes;\n\n        for (var i = 0; i < 10; i++) {\n          // data.push({\n          //     avatarUrl: array[i].avatarUrl,\n          //     bio: array[i].bio,\n          //     email: array[i].email,\n          //     location: array[i].location,\n          //     login: array[i].login,\n          //     name: array[i].name,\n          //     url: array[i].url\n          // });\n          // this.props.addData({ data: data });\n          _this.props.addData({\n            data: [array[i].avatarUrl, array[i].bio, array[i].email, array[i].location, array[i].login, array[i].name, array[i].url]\n          }); // that.setState({ data: data });\n\n\n          if (array[i].repositories.totalCount > 100) {\n            that.onFetchSumForFirstHundredFromGitHub(array[i].login, i);\n          } else {\n            that.getSum(array[i].topRepositories.edges, i);\n          }\n        }\n      })[\"catch\"](function (error) {\n        alert(error);\n      });\n    });\n\n    _this.state = {// externalData: null\n      // sum: {},\n      // data: []\n    };\n    _this.getSum = _this.getSum.bind(_assertThisInitialized(_this));\n    return _this;\n  } // componentWillMount() {\n  //     this._asyncRequest = this.onFetchFromGitHub().then(externalData => {\n  //         this._asyncRequest = null;\n  //         this.setState({ externalData });\n  //     });\n  // }\n\n\n  _createClass(ConnectedUsers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onFetchFromGitHub();\n    }\n  }, {\n    key: \"getSumHundred\",\n    value: function getSumHundred(array, number, name) {\n      var key = number;\n      var summ = 0;\n      var login = name;\n      var sum = this.props.sum;\n      array.nodes.forEach(function (element) {\n        summ += element.stargazers.totalCount;\n      }); // this.props.addSum({\n      //     sum: Object.assign(sum, {\n      //         [key]: summ + sum[key]\n      //     })\n      // });\n      // this.setState({\n      //     sum: Object.assign(this.state.sum, {\n      //         [key]: sum + this.state.sum[key]\n      //     })\n      // });\n    }\n  }, {\n    key: \"getSumFirstHundred\",\n    value: function getSumFirstHundred(array, number, name) {\n      var key = number;\n      var sum = 0; // const { sum } = this.props;\n\n      var login = name;\n      array.nodes.forEach(function (element) {\n        sum += element.stargazers.totalCount;\n      }); // this.props.addSum({\n      //     sum: Object.assign(sum, {\n      //         [key]: summ\n      //     })\n      // });\n\n      this.props.addSum({\n        sum: [sum, key]\n      }); // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n\n      if (array.pageInfo.hasNextPage === true) {\n        this.onFetchSumHundredFromGitHub(login, key, array.pageInfo.endCursor);\n      }\n    }\n  }, {\n    key: \"getSum\",\n    value: function getSum(array, number) {\n      var key = number;\n      var sum = 0; // const { sum } = this.props;\n\n      if (array !== undefined) {\n        array.forEach(function (element) {\n          sum += element.node.stargazers.totalCount;\n        });\n      }\n\n      this.props.addSum({\n        sum: [sum, key]\n      }); // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if (this.state.externalData === null) {\n      //     // Render loading state ...\n      //     console.log(0);\n      // } else {\n      var _this$props = this.props,\n          data = _this$props.data,\n          sum = _this$props.sum;\n      console.log(data);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"he\") // <>\n      //     {\n      //         // data.length === 0\n      //         // false ? (\n      //         //     <Loading>\n      //         //         <FontAwesomeIcon\n      //         //             icon={faSpinner}\n      //         //             size=\"4x\"\n      //         //             spin\n      //         //             pulse\n      //         //         />\n      //         //     </Loading>\n      //         // ) : (\n      //         <>\n      //             <Divider />\n      //             {data.map(user => (\n      //                 <>\n      //                     <Block>\n      //                         <Avatar src={user.avatarUrl}></Avatar>\n      //                         <Info>\n      //                             <Login>\n      //                                 <Link\n      //                                     href={user.url}\n      //                                     target=\"_blank\"\n      //                                 >\n      //                                     {user.login}\n      //                                 </Link>\n      //                                 <Name>{user.name}</Name>\n      //                             </Login>\n      //                             <Status>{user.bio}</Status>\n      //                             <Icons>\n      //                                 <LocationIcon>\n      //                                     <FontAwesomeIcon\n      //                                         size=\"xs\"\n      //                                         icon={faMapMarkerAlt}\n      //                                     ></FontAwesomeIcon>\n      //                                 </LocationIcon>\n      //                                 <Location>{user.location}</Location>\n      //                                 {user.email !== '' ? (\n      //                                     <>\n      //                                         <MailIcon>\n      //                                             <FontAwesomeIcon\n      //                                                 icon={faEnvelope}\n      //                                                 size=\"xs\"\n      //                                             ></FontAwesomeIcon>\n      //                                         </MailIcon>\n      //                                         <MailAdress>\n      //                                             {user.email}\n      //                                         </MailAdress>\n      //                                     </>\n      //                                 ) : null}\n      //                                 <StarIcon>\n      //                                     <FontAwesomeIcon\n      //                                         icon={faStar}\n      //                                         size=\"xs\"\n      //                                     ></FontAwesomeIcon>\n      //                                 </StarIcon>\n      //                                 <Stars>\n      //                                     {this.props.sum[\n      //                                         data.indexOf(user)\n      //                                     ] === undefined\n      //                                         ? ' '\n      //                                         : Number(\n      //                                               this.props.sum[\n      //                                                   data.indexOf(user)\n      //                                               ]\n      //                                           ).toLocaleString()}\n      //                                 </Stars>\n      //                             </Icons>\n      //                         </Info>\n      //                     </Block>\n      //                     <Divider />\n      //                 </>\n      //             ))}\n      //         </>\n      //         // )\n      //     }\n      // </>\n      ; // Render real UI ...\n      // }\n    }\n  }]);\n\n  return ConnectedUsers;\n}(React.Component);\n\nvar UsersWithSumState = connect(sumStateToProps, null)(ConnectedUsers);\nvar UsersWithDataState = connect(dataStateToProps, null)(UsersWithSumState);\nvar UsersWithSumDispatched = connect(null, sumDispatchToProps)(UsersWithDataState);\nvar Users = connect(null, dataDispatchToProps)(UsersWithSumDispatched);\nexport default Users;","map":{"version":3,"sources":["/home/ann/Development/Projects/Work/agile-nix-test/front/components/Users.js"],"names":["React","FontAwesomeIcon","faMapMarkerAlt","faEnvelope","faStar","faSpinner","styled","css","axios","connect","addSum","addData","sumStateToProps","state","sum","dataStateToProps","data","sumDispatchToProps","dispatch","dataDispatchToProps","axiosGitHubGraphQL","create","baseURL","headers","Authorization","GET_RATE","Divider","hr","Avatar","img","Info","div","Login","Status","Link","a","Name","p","Icons","LocationIcon","MailIcon","StarIcon","Stars","Location","MailAdress","Block","Loading","ConnectedUsers","props","login","after","user","number","endCursor","that","toString","key","post","query","GET_SUM_HUNDRED","then","result","array","search","nodes","repositories","getSumHundred","GET_SUM_FIRST_HUNDRED","getSumFirstHundred","i","avatarUrl","bio","email","location","name","url","totalCount","onFetchSumForFirstHundredFromGitHub","getSum","topRepositories","edges","error","alert","bind","onFetchFromGitHub","summ","forEach","element","stargazers","pageInfo","hasNextPage","onFetchSumHundredFromGitHub","undefined","node","console","log","Component","UsersWithSumState","UsersWithDataState","UsersWithSumDispatched","Users"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faMapMarkerAlt,\n    faEnvelope,\n    faStar,\n    faSpinner\n} from '@fortawesome/free-solid-svg-icons';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addSum, addData } from '../redux/actions/index';\n\nconst sumStateToProps = state => {\n    return { sum: state.sum };\n};\n\nconst dataStateToProps = state => {\n    return { data: state.data };\n};\n\nfunction sumDispatchToProps(dispatch) {\n    return {\n        addSum: sum => dispatch(addSum(sum))\n    };\n}\n\nfunction dataDispatchToProps(dispatch) {\n    return {\n        addData: data => dispatch(addData(data))\n    };\n}\n\nconst axiosGitHubGraphQL = axios.create({\n    baseURL: 'https://api.github.com/graphql',\n    headers: {\n        Authorization: 'bearer 2cdc2aa829e6a0fe455edaf962cdda54e923b505'\n    }\n});\n\nconst GET_RATE = `\n{\n    search(   \n      type: USER, query:\"location:Kharkiv sort:followers-desc\"\n      first: 10) {\n      nodes {\n        ... on User {\n          name\n          login\n          avatarUrl\n          url\n          bio\n          location\n          email\n          repositories{totalCount}\n          topRepositories(first: 100, orderBy:{field: STARGAZERS, direction: DESC}) {\n            edges {\n              node {\n                stargazers{totalCount}\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst Divider = styled.hr`\n    background: rgba(128, 128, 128, 0.5);\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    height: 1px;\n    border: 0;\n`;\nconst Avatar = styled.img`\n    width: 75px;\n    margin-top: 10px;\n    border-radius: 10px;\n    margin-bottom: 10px;\n`;\n\nconst Info = styled.div`\n    display: flex;\n    width: 88%;\n    flex-flow: column;\n    margin-top: 10px;\n`;\n\nconst Login = styled.div`\n    width: 88%;\n    display: flex;\n`;\n\nconst Status = styled.div`\n    margin-top: 10px;\n    padding-left: 10px;\n`;\n\nconst Link = styled.a`\n    text-decoration: blink;\n    padding-left: 10px;\n    color: #2664d9;\n`;\n\nconst Name = styled.p`\n    padding-left: 10px;\n    margin: 0;\n`;\n\nconst Icons = styled.div`\n    display: flex;\n    margin-top: 10px;\n    color: #858585;\n`;\n\nconst LocationIcon = styled.div`\n    padding-left: 10px;\n`;\n\nconst MailIcon = styled.div`\n    padding-left: 40px;\n`;\n\nconst StarIcon = styled.div`\n    padding-left: 40px;\n`;\n\nconst Stars = styled.div`\n    padding-left: 10px;\n`;\n\nconst Location = styled.div`\n    padding-left: 10px;\n`;\n\nconst MailAdress = styled.div`\n    padding-left: 10px;\n`;\n\nconst Block = styled.div`\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n`;\n\nconst Loading = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100vh;\n    justify-content: center;\n`;\n\nclass ConnectedUsers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // externalData: null\n            // sum: {},\n            // data: []\n        };\n        this.getSum = this.getSum.bind(this);\n    }\n\n    // componentWillMount() {\n    //     this._asyncRequest = this.onFetchFromGitHub().then(externalData => {\n    //         this._asyncRequest = null;\n    //         this.setState({ externalData });\n    //     });\n    // }\n\n    componentDidMount() {\n        this.onFetchFromGitHub();\n    }\n\n    GET_SUM_FIRST_HUNDRED = login => `query \n{\n  search(   \n    type: USER, query:\"user:${login}\"\n    first: 1) {\n    nodes {\n      ... on User {\n        login\n        repositories (first:100) {\n      pageInfo {\n        hasNextPage,\n        endCursor\n      },\n      nodes {\n        stargazers{totalCount}\n      }\n      }\n    }\n  }\n}\n}`;\n\n    GET_SUM_HUNDRED = (login, after) =>\n        `query \n{\n  search(   \n    type: USER, query:\"user:${login}\"\n    first: 1) {\n    nodes {\n      ... on User {\n        login\n        repositories (first:100, after:\"${after}\") {\n      pageInfo {\n        hasNextPage,\n        endCursor\n      },\n      nodes {\n        stargazers{totalCount}\n      }\n      }\n    }\n  }\n}\n}`;\n\n    onFetchSumHundredFromGitHub = (user, number, endCursor) => {\n        const that = this;\n        const after = endCursor.toString();\n        const login = user;\n        const key = number;\n        axiosGitHubGraphQL\n            .post('', { query: that.GET_SUM_HUNDRED(login, after) })\n            .then(result => {\n                let array = result.data.data.search.nodes[0].repositories;\n                that.getSumHundred(array, key);\n            });\n    };\n\n    onFetchSumForFirstHundredFromGitHub = (user, number) => {\n        const that = this;\n        const login = user;\n        const key = number;\n        axiosGitHubGraphQL\n            .post('', { query: that.GET_SUM_FIRST_HUNDRED(login) })\n            .then(result => {\n                let array = result.data.data.search.nodes[0].repositories;\n                that.getSumFirstHundred(array, key, login);\n            });\n    };\n\n    onFetchFromGitHub = () => {\n        const that = this;\n        // const { data } = this.props;\n        axiosGitHubGraphQL\n            .post('', { query: GET_RATE })\n            .then(result => {\n                let array = result.data.data.search.nodes;\n                for (var i = 0; i < 10; i++) {\n                    // data.push({\n                    //     avatarUrl: array[i].avatarUrl,\n                    //     bio: array[i].bio,\n                    //     email: array[i].email,\n                    //     location: array[i].location,\n                    //     login: array[i].login,\n                    //     name: array[i].name,\n                    //     url: array[i].url\n                    // });\n                    // this.props.addData({ data: data });\n                    this.props.addData({\n                        data: [\n                            array[i].avatarUrl,\n                            array[i].bio,\n                            array[i].email,\n                            array[i].location,\n                            array[i].login,\n                            array[i].name,\n                            array[i].url\n                        ]\n                    });\n\n                    // that.setState({ data: data });\n                    if (array[i].repositories.totalCount > 100) {\n                        that.onFetchSumForFirstHundredFromGitHub(\n                            array[i].login,\n                            i\n                        );\n                    } else {\n                        that.getSum(array[i].topRepositories.edges, i);\n                    }\n                }\n            })\n            .catch(function(error) {\n                alert(error);\n            });\n    };\n\n    getSumHundred(array, number, name) {\n        let key = number;\n        let summ = 0;\n        const login = name;\n        const { sum } = this.props;\n        array.nodes.forEach(element => {\n            summ += element.stargazers.totalCount;\n        });\n        // this.props.addSum({\n        //     sum: Object.assign(sum, {\n        //         [key]: summ + sum[key]\n        //     })\n        // });\n        // this.setState({\n        //     sum: Object.assign(this.state.sum, {\n        //         [key]: sum + this.state.sum[key]\n        //     })\n        // });\n    }\n\n    getSumFirstHundred(array, number, name) {\n        let key = number;\n        let sum = 0;\n        // const { sum } = this.props;\n        const login = name;\n        array.nodes.forEach(element => {\n            sum += element.stargazers.totalCount;\n        });\n        // this.props.addSum({\n        //     sum: Object.assign(sum, {\n        //         [key]: summ\n        //     })\n        // });\n        this.props.addSum({\n            sum: [sum, key]\n        });\n        // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n        if (array.pageInfo.hasNextPage === true) {\n            this.onFetchSumHundredFromGitHub(\n                login,\n                key,\n                array.pageInfo.endCursor\n            );\n        }\n    }\n\n    getSum(array, number) {\n        let key = number;\n        let sum = 0;\n        // const { sum } = this.props;\n\n        if (array !== undefined) {\n            array.forEach(element => {\n                sum += element.node.stargazers.totalCount;\n            });\n        }\n        this.props.addSum({\n            sum: [sum, key]\n        });\n        // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n    }\n\n    render() {\n        // if (this.state.externalData === null) {\n        //     // Render loading state ...\n        //     console.log(0);\n        // } else {\n        const { data, sum } = this.props;\n        console.log(data);\n        return (\n            <div>he</div>\n            // <>\n            //     {\n            //         // data.length === 0\n            //         // false ? (\n            //         //     <Loading>\n            //         //         <FontAwesomeIcon\n            //         //             icon={faSpinner}\n            //         //             size=\"4x\"\n            //         //             spin\n            //         //             pulse\n            //         //         />\n            //         //     </Loading>\n            //         // ) : (\n            //         <>\n            //             <Divider />\n\n            //             {data.map(user => (\n            //                 <>\n            //                     <Block>\n            //                         <Avatar src={user.avatarUrl}></Avatar>\n            //                         <Info>\n            //                             <Login>\n            //                                 <Link\n            //                                     href={user.url}\n            //                                     target=\"_blank\"\n            //                                 >\n            //                                     {user.login}\n            //                                 </Link>\n            //                                 <Name>{user.name}</Name>\n            //                             </Login>\n            //                             <Status>{user.bio}</Status>\n            //                             <Icons>\n            //                                 <LocationIcon>\n            //                                     <FontAwesomeIcon\n            //                                         size=\"xs\"\n            //                                         icon={faMapMarkerAlt}\n            //                                     ></FontAwesomeIcon>\n            //                                 </LocationIcon>\n            //                                 <Location>{user.location}</Location>\n            //                                 {user.email !== '' ? (\n            //                                     <>\n            //                                         <MailIcon>\n            //                                             <FontAwesomeIcon\n            //                                                 icon={faEnvelope}\n            //                                                 size=\"xs\"\n            //                                             ></FontAwesomeIcon>\n            //                                         </MailIcon>\n            //                                         <MailAdress>\n            //                                             {user.email}\n            //                                         </MailAdress>\n            //                                     </>\n            //                                 ) : null}\n            //                                 <StarIcon>\n            //                                     <FontAwesomeIcon\n            //                                         icon={faStar}\n            //                                         size=\"xs\"\n            //                                     ></FontAwesomeIcon>\n            //                                 </StarIcon>\n            //                                 <Stars>\n            //                                     {this.props.sum[\n            //                                         data.indexOf(user)\n            //                                     ] === undefined\n            //                                         ? ' '\n            //                                         : Number(\n            //                                               this.props.sum[\n            //                                                   data.indexOf(user)\n            //                                               ]\n            //                                           ).toLocaleString()}\n            //                                 </Stars>\n            //                             </Icons>\n            //                         </Info>\n            //                     </Block>\n            //                     <Divider />\n            //                 </>\n            //             ))}\n            //         </>\n            //         // )\n            //     }\n            // </>\n        );\n        // Render real UI ...\n        // }\n    }\n}\n\nconst UsersWithSumState = connect(\n    sumStateToProps,\n    null\n)(ConnectedUsers);\n\nconst UsersWithDataState = connect(\n    dataStateToProps,\n    null\n)(UsersWithSumState);\n\nconst UsersWithSumDispatched = connect(\n    null,\n    sumDispatchToProps\n)(UsersWithDataState);\n\nconst Users = connect(\n    null,\n    dataDispatchToProps\n)(UsersWithSumDispatched);\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}