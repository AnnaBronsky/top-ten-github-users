{"version":3,"file":"static/webpack/static/development/pages/index.js.4fb8e01f3c0c8cdeae63.hot-update.js","sources":["webpack:///./components/Users.js"],"sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faMapMarkerAlt,\n    faEnvelope,\n    faStar,\n    faSpinner\n} from '@fortawesome/free-solid-svg-icons';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { addSum, addData } from '../redux/actions/index';\n\nconst sumStateToProps = state => {\n    return { sum: state.sum };\n};\n\nconst dataStateToProps = state => {\n    return { data: state.data };\n};\n\nfunction sumDispatchToProps(dispatch) {\n    return {\n        addSum: sum => dispatch(addSum(sum))\n    };\n}\n\nfunction dataDispatchToProps(dispatch) {\n    return {\n        addData: data => dispatch(addData(data))\n    };\n}\n\nconst axiosGitHubGraphQL = axios.create({\n    baseURL: 'https://api.github.com/graphql',\n    headers: {\n        Authorization: 'bearer 2cdc2aa829e6a0fe455edaf962cdda54e923b505'\n    }\n});\n\nconst GET_RATE = `\n{\n    search(   \n      type: USER, query:\"location:Kharkiv sort:followers-desc\"\n      first: 10) {\n      nodes {\n        ... on User {\n          name\n          login\n          avatarUrl\n          url\n          bio\n          location\n          email\n          repositories{totalCount}\n          topRepositories(first: 100, orderBy:{field: STARGAZERS, direction: DESC}) {\n            edges {\n              node {\n                stargazers{totalCount}\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nconst Divider = styled.hr`\n    background: rgba(128, 128, 128, 0.5);\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    height: 1px;\n    border: 0;\n`;\nconst Avatar = styled.img`\n    width: 75px;\n    margin-top: 10px;\n    border-radius: 10px;\n    margin-bottom: 10px;\n`;\n\nconst Info = styled.div`\n    display: flex;\n    width: 88%;\n    flex-flow: column;\n    margin-top: 10px;\n`;\n\nconst Login = styled.div`\n    width: 88%;\n    display: flex;\n`;\n\nconst Status = styled.div`\n    margin-top: 10px;\n    padding-left: 10px;\n`;\n\nconst Link = styled.a`\n    text-decoration: blink;\n    padding-left: 10px;\n    color: #2664d9;\n`;\n\nconst Name = styled.p`\n    padding-left: 10px;\n    margin: 0;\n`;\n\nconst Icons = styled.div`\n    display: flex;\n    margin-top: 10px;\n    color: #858585;\n`;\n\nconst LocationIcon = styled.div`\n    padding-left: 10px;\n`;\n\nconst MailIcon = styled.div`\n    padding-left: 40px;\n`;\n\nconst StarIcon = styled.div`\n    padding-left: 40px;\n`;\n\nconst Stars = styled.div`\n    padding-left: 10px;\n`;\n\nconst Location = styled.div`\n    padding-left: 10px;\n`;\n\nconst MailAdress = styled.div`\n    padding-left: 10px;\n`;\n\nconst Block = styled.div`\n    width: 700px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n`;\n\nconst Loading = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100vh;\n    justify-content: center;\n`;\n\nclass ConnectedUsers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // externalData: null\n            // sum: {},\n            // data: []\n        };\n        this.getSum = this.getSum.bind(this);\n    }\n\n    // componentWillMount() {\n    //     this._asyncRequest = this.onFetchFromGitHub().then(externalData => {\n    //         this._asyncRequest = null;\n    //         this.setState({ externalData });\n    //     });\n    // }\n\n    componentDidMount() {\n        this.onFetchFromGitHub();\n    }\n\n    GET_SUM_FIRST_HUNDRED = login => `query \n{\n  search(   \n    type: USER, query:\"user:${login}\"\n    first: 1) {\n    nodes {\n      ... on User {\n        login\n        repositories (first:100) {\n      pageInfo {\n        hasNextPage,\n        endCursor\n      },\n      nodes {\n        stargazers{totalCount}\n      }\n      }\n    }\n  }\n}\n}`;\n\n    GET_SUM_HUNDRED = (login, after) =>\n        `query \n{\n  search(   \n    type: USER, query:\"user:${login}\"\n    first: 1) {\n    nodes {\n      ... on User {\n        login\n        repositories (first:100, after:\"${after}\") {\n      pageInfo {\n        hasNextPage,\n        endCursor\n      },\n      nodes {\n        stargazers{totalCount}\n      }\n      }\n    }\n  }\n}\n}`;\n\n    onFetchSumHundredFromGitHub = (user, number, endCursor) => {\n        const that = this;\n        const after = endCursor.toString();\n        const login = user;\n        const key = number;\n        axiosGitHubGraphQL\n            .post('', { query: that.GET_SUM_HUNDRED(login, after) })\n            .then(result => {\n                let array = result.data.data.search.nodes[0].repositories;\n                that.getSumHundred(array, key);\n            });\n    };\n\n    onFetchSumForFirstHundredFromGitHub = (user, number) => {\n        const that = this;\n        const login = user;\n        const key = number;\n        axiosGitHubGraphQL\n            .post('', { query: that.GET_SUM_FIRST_HUNDRED(login) })\n            .then(result => {\n                let array = result.data.data.search.nodes[0].repositories;\n                that.getSumFirstHundred(array, key, login);\n            });\n    };\n\n    onFetchFromGitHub = () => {\n        const that = this;\n        const { data } = this.props;\n        axiosGitHubGraphQL\n            .post('', { query: GET_RATE })\n            .then(result => {\n                let array = result.data.data.search.nodes;\n                for (var i = 0; i < 10; i++) {\n                    data.push({\n                        avatarUrl: array[i].avatarUrl,\n                        bio: array[i].bio,\n                        email: array[i].email,\n                        location: array[i].location,\n                        login: array[i].login,\n                        name: array[i].name,\n                        url: array[i].url\n                    });\n                    this.props.addData({ data: data });\n                    // that.setState({ data: data });\n                    if (array[i].repositories.totalCount > 100) {\n                        that.onFetchSumForFirstHundredFromGitHub(\n                            array[i].login,\n                            i\n                        );\n                    } else {\n                        that.getSum(array[i].topRepositories.edges, i);\n                    }\n                }\n            })\n            .catch(function(error) {\n                alert(error);\n            });\n    };\n\n    getSumHundred(array, number, name) {\n        let key = number;\n        let summ = 0;\n        const login = name;\n        const { sum } = this.props;\n        array.nodes.forEach(element => {\n            summ += element.stargazers.totalCount;\n        });\n        this.props.addSum({\n            sum: Object.assign(sum, {\n                [key]: summ + sum[key]\n            })\n        });\n        // this.setState({\n        //     sum: Object.assign(this.state.sum, {\n        //         [key]: sum + this.state.sum[key]\n        //     })\n        // });\n    }\n\n    getSumFirstHundred(array, number, name) {\n        let key = number;\n        let summ = 0;\n        const { sum } = this.props;\n        const login = name;\n        array.nodes.forEach(element => {\n            summ += element.stargazers.totalCount;\n        });\n        this.props.addSum({\n            sum: Object.assign(sum, {\n                [key]: summ\n            })\n        });\n        // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n        if (array.pageInfo.hasNextPage === true) {\n            this.onFetchSumHundredFromGitHub(\n                login,\n                key,\n                array.pageInfo.endCursor\n            );\n        }\n    }\n\n    getSum(array, number) {\n        let key = number;\n        let summ = 0;\n        const { sum } = this.props;\n\n        if (array !== undefined) {\n            array.forEach(element => {\n                summ += element.node.stargazers.totalCount;\n            });\n        }\n        this.props.addSum({\n            sum: Object.assign(sum, {\n                [key]: summ\n            })\n        });\n        // this.setState({ sum: Object.assign(this.state.sum, { [key]: sum }) });\n    }\n\n    render() {\n        // if (this.state.externalData === null) {\n        //     // Render loading state ...\n        //     console.log(0);\n        // } else {\n        const { data, sum } = this.props;\n        console.log(sum);\n        return (\n            <>\n                {\n                    // data.length === 0\n                    // false ? (\n                    //     <Loading>\n                    //         <FontAwesomeIcon\n                    //             icon={faSpinner}\n                    //             size=\"4x\"\n                    //             spin\n                    //             pulse\n                    //         />\n                    //     </Loading>\n                    // ) : (\n                    <>\n                        <Divider />\n\n                        {data.map(user => (\n                            <>\n                                <Block>\n                                    <Avatar src={user.avatarUrl}></Avatar>\n                                    <Info>\n                                        <Login>\n                                            <Link\n                                                href={user.url}\n                                                target=\"_blank\"\n                                            >\n                                                {user.login}\n                                            </Link>\n                                            <Name>{user.name}</Name>\n                                        </Login>\n                                        <Status>{user.bio}</Status>\n                                        <Icons>\n                                            <LocationIcon>\n                                                <FontAwesomeIcon\n                                                    size=\"xs\"\n                                                    icon={faMapMarkerAlt}\n                                                ></FontAwesomeIcon>\n                                            </LocationIcon>\n                                            <Location>{user.location}</Location>\n                                            {user.email !== '' ? (\n                                                <>\n                                                    <MailIcon>\n                                                        <FontAwesomeIcon\n                                                            icon={faEnvelope}\n                                                            size=\"xs\"\n                                                        ></FontAwesomeIcon>\n                                                    </MailIcon>\n                                                    <MailAdress>\n                                                        {user.email}\n                                                    </MailAdress>\n                                                </>\n                                            ) : null}\n                                            <StarIcon>\n                                                <FontAwesomeIcon\n                                                    icon={faStar}\n                                                    size=\"xs\"\n                                                ></FontAwesomeIcon>\n                                            </StarIcon>\n                                            <Stars>\n                                                {this.props.sum[\n                                                    data.indexOf(user)\n                                                ] === undefined\n                                                    ? ' '\n                                                    : Number(\n                                                          this.props.sum[\n                                                              data.indexOf(user)\n                                                          ]\n                                                      ).toLocaleString()}\n                                            </Stars>\n                                        </Icons>\n                                    </Info>\n                                </Block>\n                                <Divider />\n                            </>\n                        ))}\n                    </>\n                    // )\n                }\n            </>\n        );\n        // Render real UI ...\n        // }\n    }\n}\n\nconst UsersWithSumState = connect(\n    sumStateToProps,\n    null\n)(ConnectedUsers);\n\nconst UsersWithDataState = connect(\n    dataStateToProps,\n    null\n)(UsersWithSumState);\n\nconst UsersWithSumDispatched = connect(\n    null,\n    sumDispatchToProps\n)(UsersWithDataState);\n\nconst Users = connect(\n    null,\n    dataDispatchToProps\n)(UsersWithSumDispatched);\n\nexport default Users;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAOA;AA2BA;AAQA;AAOA;AAOA;AAKA;AAKA;AAMA;AAKA;AAMA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAOA;AACA;AAMA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAqBA;AAAA;AACA;AAtBA;AA2CA;AAAA;AACA;AA5CA;AAmEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AA9EA;AAgFA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AA1FA;AA4FA;AACA;AAFA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1HA;AAEA;AACA;AAHA;AAKA;AAPA;AAQA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;;;AA0GA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAKA;AACA;AAKA;AACA;;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAMA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAMA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxDA;AAhBA;AAiFA;AACA;;;;AArRA;AACA;AAuRA;AAKA;AAKA;AAKA;AAKA;;;;A","sourceRoot":""}