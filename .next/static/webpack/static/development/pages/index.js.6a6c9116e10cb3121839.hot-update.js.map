{"version":3,"file":"static/webpack/static/development/pages/index.js.6a6c9116e10cb3121839.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./redux/reducers/index.js"],"sourcesContent":["import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","import { ADD_SUM, ADD_DATA } from '../constants/action-types';\n\nconst initialState = {\n    data: [],\n    sum: {}\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === ADD_DATA) {\n        return Object.assign({}, state, {\n            data: [\n                ...state.data,\n                {\n                    [action.payload.data[7]]: {\n                        avatarUrl: action.payload.data[0],\n                        bio: action.payload.data[1],\n                        email: action.payload.data[2],\n                        location: action.payload.data[3],\n                        login: action.payload.data[4],\n                        name: action.payload.data[5],\n                        url: action.payload.data[6]\n                    }\n                }\n            ]\n        });\n    } else if (action.type === ADD_SUM) {\n        return Object.assign({}, state, action.payload);\n    }\n    return state;\n}\n\nexport default rootReducer;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAgBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}